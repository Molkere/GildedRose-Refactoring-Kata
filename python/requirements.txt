class Item:
    def _init_(self, name, sell_in, quality):
        self.name = name
        self.sell_in = sell_in
        self.quality = quality

class GildedRose:
    def _init_(self, items):
        self.items = items

    def update_quality(self):
        for item in self.items:
            if item.name == "Sulfuras, Hand of Ragnaros":
                continue
            
            if item.name == "Aged Brie":
                self._update_aged_brie(item)
            elif item.name == "Backstage passes to a TAFKAL80ETC concert":
                self._update_backstage_passes(item)
            elif item.name.startswith("Conjured"):
                self._update_conjured(item)
            else:
                self._update_normal_item(item)
            
            item.sell_in -= 1
            
            if item.sell_in < 0:
                if item.name == "Aged Brie":
                    self._update_aged_brie(item)
                elif item.name == "Backstage passes to a TAFKAL80ETC concert":
                    item.quality = 0
                else:
                    self._update_quality_after_sell_by(item)

    def _update_normal_item(self, item):
        if item.quality > 0:
            item.quality -= 1
    
    def _update_conjured(self, item):
        if item.quality > 0:
            item.quality -= 2
        if item.sell_in < 0:
            if item.quality > 0:
                item.quality -= 2

    def _update_aged_brie(self, item):
        if item.quality < 50:
            item.quality += 1

    def _update_backstage_passes(self, item):
        if item.quality < 50:
            if item.sell_in <= 0:
                item.quality = 0
            elif item.sell_in <= 5:
                item.quality += 3
            elif item.sell_in <= 10:
                item.quality += 2
            else:
                item.quality += 1

    def _update_quality_after_sell_by(self, item):
        if item.quality > 0:
            item.quality -= 1
